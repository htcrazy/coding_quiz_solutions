class Solution:
    def longestPalindrome(self, s: str) -> str:
        if len(s) <=1:
            return s
        
        run_this = "#" + "#".join(s) + "#"
        radius = [0 for _ in run_this]
        ans_string = s[0]
        ans_length = 1
        big_p_here = 0
        right_end = 0

        for i in range(len(run_this)):

            if i < right_end:
                radius[i] = min(radius[big_p_here - (i - big_p_here)], right_end - i)

            while i - 1 - radius[i] >= 0 and i + 1 + radius[i] < len(run_this) and run_this[i - 1 - radius[i]] == run_this[i + 1 + radius[i]]:
                radius[i] += 1

            if radius[i] > ans_length:
                ans_length = radius[i]
                ans_string = run_this[i - radius[i] : i + radius[i] + 1].replace("#","")

            if i + radius[i] > right_end:
                big_p_here = i
                right_end = i + radius[i]

        return ans_string
