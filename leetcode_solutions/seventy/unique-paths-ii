class Solution:
    def uniquePathsWithObstacles(self, obstacleGrid: list[list[int]]) -> int:
        if obstacleGrid[0][0] == 1:
            return 0

        m = len(obstacleGrid)
        n = len(obstacleGrid[0])

        colCheck = [0 for _ in range(n)]
        colCheck[0] = 1

        for row in range(m):
            for col in range(n):
                if obstacleGrid[row][col] == 1:
                    colCheck[col] = 0
                else:
                    if col > 0:
                        colCheck[col] += colCheck[col-1]

        return colCheck[n-1]
